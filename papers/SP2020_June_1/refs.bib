@inproceedings {203878,
	author = {Shuai Wang and Pei Wang and Xiao Liu and Danfeng Zhang and Dinghao Wu},
	title = {CacheD: Identifying Cache-Based Timing Channels in Production Software},
	booktitle = {26th {USENIX} Security Symposium ({USENIX} Security 17)},
	year = {2017},
	isbn = {978-1-931971-40-9},
	address = {Vancouver, BC},
	pages = {235--252},
	url = {https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/wang-shuai},
	publisher = {{USENIX} Association},
}

@inproceedings {217537,
author = {Samuel Weiser and Andreas Zankl and Raphael Spreitzer and Katja Miller and Stefan Mangard and Georg Sigl},
title = {{DATA} {\textendash} Differential Address Trace Analysis: Finding Address-based Side-Channels in Binaries},
booktitle = {27th {USENIX} Security Symposium ({USENIX} Security 18)},
year = {2018},
isbn = {978-1-931971-46-1},
address = {Baltimore, MD},
pages = {603--620},
url = {https://www.usenix.org/conference/usenixsecurity18/presentation/weiser},
publisher = {{USENIX} Association},
}

@inproceedings {191010,
author = {Daniel Gruss and Raphael Spreitzer and Stefan Mangard},
title = {Cache Template Attacks: Automating Attacks on Inclusive Last-Level Caches},
booktitle = {24th {USENIX} Security Symposium ({USENIX} Security 15)},
year = {2015},
isbn = {978-1-931971-232},
address = {Washington, D.C.},
pages = {897--912},
url = {https://www.usenix.org/conference/usenixsecurity15/technical-sessions/presentation/gruss},
publisher = {{USENIX} Association},
}

@INPROCEEDINGS{7163052, 
author={Y. {Xu} and W. {Cui} and M. {Peinado}}, 
booktitle={2015 IEEE Symposium on Security and Privacy}, 
title={Controlled-Channel Attacks: Deterministic Side Channels for Untrusted Operating Systems}, 
year={2015}, 
volume={}, 
number={}, 
pages={640-656}, 
keywords={cryptography;document handling;operating systems (computers);trusted computing;legacy operating systems;JPEG images;text documents;Haven;Ink Tag;Overshadow;trusted hardware;hypervisor;trusted computing;feature-rich commodity operating systems;security vulnerabilities;untrusted operating systems;deterministic side channels;controlled-channel attacks;Operating systems;Monitoring;Hardware;Control systems;Resource management;Data mining;Virtual machine monitors;side-channel attack;untrusted operating system;SGX;virtualization}, 
doi={10.1109/SP.2015.45}, 
ISSN={1081-6011}, 
month={May},}

@article{DBLP:journals/jce/GeYCH18,
  author    = {Qian Ge and
               Yuval Yarom and
               David Cock and
               Gernot Heiser},
  title     = {A survey of microarchitectural timing attacks and countermeasures
               on contemporary hardware},
  journal   = {J. Cryptographic Engineering},
  volume    = {8},
  number    = {1},
  pages     = {1--27},
  year      = {2018},
}

@INPROCEEDINGS{7536389, 
author={C. S. {Pasareanu} and Q. {Phan} and P. {Malacaria}}, 
booktitle={2016 IEEE 29th Computer Security Foundations Symposium (CSF)}, 
title={Multi-run Side-Channel Analysis Using Symbolic Execution and Max-SMT}, 
year={2016}, 
volume={}, 
number={}, 
pages={387-400}, 
keywords={computability;cryptography;multirun side-channel analysis;symbolic execution;max-SMT;satisfiability modulo theory;confidential information;program analysis;information quantification;side-channel measurements;model counting metrics;information-theoretic metrics;Symbolic PathFinder tool;password checking function;cryptographic functions;Java;Cryptography;Concrete;Computational modeling;Channel capacity;Measurement uncertainty;Context;Side-Channel Attacks;Quantitative Information Flow;Cryptography;Multi-run Security;Symbolic Execution;Satisfiability Modulo Theories;Max-SMT}, 
doi={10.1109/CSF.2016.34}, 
ISSN={2374-8303}, 
month={June},
}

@InProceedings{10.1007/978-3-642-00596-1_21,
author="Smith, Geoffrey",
editor="de Alfaro, Luca",
title="On the Foundations of Quantitative Information Flow",
booktitle="Foundations of Software Science and Computational Structures",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="288--302",
abstract="There is growing interest in quantitative theories of information flow in a variety of contexts, such as secure information flow, anonymity protocols, and side-channel analysis. Such theories offer an attractive way to relax the standard noninterference properties, letting us tolerate ``small'' leaks that are necessary in practice. The emerging consensus is that quantitative information flow should be founded on the concepts of Shannon entropy and mutual information. But a useful theory of quantitative information flow must provide appropriate security guarantees: if the theory says that an attack leaks x bits of secret information, then x should be useful in calculating bounds on the resulting threat. In this paper, we focus on the threat that an attack will allow the secret to be guessed correctly in one try. With respect to this threat model, we argue that the consensus definitions actually fail to give good security guarantees---the problem is that a random variable can have arbitrarily large Shannon entropy even if it is highly vulnerable to being guessed. We then explore an alternative foundation based on a concept of vulnerability (closely related to Bayes risk) and which measures uncertainty using R{\'e}nyi's min-entropy, rather than Shannon entropy.",
isbn="978-3-642-00596-1"
}

@InProceedings{10.1007/978-3-642-31424-7_40,
author="Kopf, Boris
and Mauborgne, Laurent
and Ochoa, Martn",
editor="Madhusudan, P.
and Seshia, Sanjit A.",
title="Automatic Quantification of Cache Side-Channels",
booktitle="Computer Aided Verification",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="564--580",
abstract="The latency gap between caches and main memory has been successfully exploited for recovering sensitive input to programs, such as cryptographic keys from implementation of AES and RSA. So far, there are no practical general-purpose countermeasures against this threat. In this paper we propose a novel method for automatically deriving upper bounds on the amount of information about the input that an adversary can extract from a program by observing the CPU's cache behavior. At the heart of our approach is a novel technique for efficient counting of concretizations of abstract cache states that enables us to connect state-of-the-art techniques for static cache analysis and quantitative information-flow. We implement our counting procedure on top of the AbsInt TimingExplorer, one of the most advanced engines for static cache analysis. We use our tool to perform a case study where we derive upper bounds on the cache leakage of a 128-bit AES executable on an ARM processor. We also analyze this implementation with a commonly suggested (but until now heuristic) countermeasure applied, obtaining a formal account of the corresponding increase in security.",
isbn="978-3-642-31424-7"
}

@inproceedings {182946,
author = {Goran Doychev and Dominik Feld and Boris Kopf and Laurent Mauborgne and Jan Reineke},
title = {CacheAudit: A Tool for the Static Analysis of Cache Side Channels},
booktitle = {Presented as part of the 22nd {USENIX} Security Symposium ({USENIX} Security 13)},
year = {2013},
isbn = {978-1-931971-03-4},
address = {Washington, D.C.},
pages = {431--446},
url = {https://www.usenix.org/conference/usenixsecurity13/technical-sessions/paper/doychev},
publisher = {{USENIX}},
}

@inproceedings{shoshitaishvili2016state,
  title={{SoK: (State of) The Art of War: Offensive Techniques in Binary Analysis}},
  author={Shoshitaishvili, Yan and Wang, Ruoyu and Salls, Christopher and
          Stephens, Nick and Polino, Mario and Dutcher, Audrey and Grosen, John and
          Feng, Siji and Hauser, Christophe and Kruegel, Christopher and Vigna, Giovanni},
  booktitle={IEEE Symposium on Security and Privacy},
  year={2016}
}

@InProceedings{10.1007/978-3-642-22110-1_37,
author="Brumley, David
and Jager, Ivan
and Avgerinos, Thanassis
and Schwartz, Edward J.",
editor="Gopalakrishnan, Ganesh
and Qadeer, Shaz",
title="BAP: A Binary Analysis Platform",
booktitle="Computer Aided Verification",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="463--469",
abstract="BAP is a publicly available infrastructure for performing program verification and analysis tasks on binary (i.e., executable) code. In this paper, we describe BAP as well as lessons learned from previous incarnations of binary analysis platforms. BAP explicitly represents all side effects of instructions in an intermediate language (IL), making syntaxdirected analysis possible. We have used BAP to routinely generate and solve verification conditions that are hundreds of megabytes in size and encompass 100,000's of assembly instructions.",
isbn="978-3-642-22110-1"
}
